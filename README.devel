#!/bin/sh
#
# Act Dev Installation Instructions (YMMV)
#

echo "You should not run this script unless you know what you are doing."
echo "Its purpose is to document a process on a shell syntax."
echo "There is no assurance that it works or does what you mean."
echo "You have been warned."
exit 1

set -e

sudo sed -i -e 's,http://[^ ]*,mirror://mirrors.ubuntu.com/mirrors.txt,' /etc/apt/sources.list
sudo apt-get update
sudo apt-get install vim build-essential libgdbm-dev libperl-dev libgmp3-dev libfreetype6-dev libgif-dev libjpeg62-dev libpng3-dev libtiff4-dev libpq-dev libt1-dev git-core

# FQDN should not end with a dot
sudo sed -i -e 's,comcast\.net\.,comcast.net,' /etc/hosts

# select local only
sudo apt-get install postfix

# postgresql must initialize with UTF8, a reboot is needed :(
# /etc/default/locale => LANG="en_US.UTF8"
sudo apt-get install postgresql

wget https://archive.apache.org/dist/httpd/apache_1.3.42.tar.gz
wget https://www.apache.org/dist/perl/mod_perl-1.31.tar.gz
wget https://archive.apache.org/dist/httpd/libapreq/libapreq-1.34.tar.gz

tar xf apache_1.3.42.tar.gz
tar xf mod_perl-1.31.tar.gz
tar xf libapreq-1.34.tar.gz

patch -p0 < apache_1.3.42.patch

# mod_perl needs /bin/sh to be bash
sudo ln -snf bash /bin/sh

cd mod_perl-1.31
perl Makefile.PL APACHE_SRC=../apache_1.3.42/src DO_HTTPD=1 USE_APACI=1 EVERYTHING=1 APACI_ARGS=--enable-module=so
make
make test
sudo make install

cd ../apache-1.3.42
sudo make install
PATH=$PATH:/usr/local/apache/bin

# use cpanminus to install from CPAN
wget --no-check-certificate http://cpanmin.us -O cpanm
chmod a+x cpanm
sudo mv cpanm /usr/local/bin

# t/response/TestMore/testpm.pm needs to setup $0 in order for tests to pass.
# You can install without testing or add this block in testpm.pm:
# BEGIN { my $file = __FILE__; *0 = \$file }
cpanm --sudo --notest Apache::Test

cd ../libapreq-1.34
perl Makefile.PL
make
# t/response/TestApReq/big_input.pm needs to setup $0 in order for tests to pass.
# You can install without testing or add this block in big_input.pm:
# BEGIN { my $file = __FILE__; *0 = \$file }
#make test
sudo make install

# install Act reqs from ~/cpanfile
cd ~
cp /vagrant/cpanfile .
cpanm --sudo --installdeps .

# Act, finally...
git clone https://github.com/book/Act.git ~/act
cd ~/act
perl Makefile.PL
make
export ACTHOME=$PWD
export PERL5LIB=$PWD/lib
cp -ai eg/conf .
sed -i -e 's,foo,vagrant,' conf/act.ini
cp -ai skel/actdocs .
cp -ai /usr/local/apache/conf/httpd.conf .
cat >>httpd.conf <<'EOF'
Listen 8080
<VirtualHost *:8080>
      ServerName   localhost:8080
      ServerAdmin  webmaster@example.com
      DocumentRoot /home/vagrant/act/wwwdocs
      Include      /home/vagrant/act/conf/httpd.conf
</VirtualHost>
EOF
sudo -u postgres -i
createuser -s vagrant
createdb act --encoding=UTF8
createdb acttest --encoding=UTF8
createdb actwiki --encoding=UTF8
exit
sudo vi /etc/postgresql/8.4/main/pg_hba.conf
# local   all         all                               trust
# host    all         all         127.0.0.1/32          trust
# host    all         all         ::1/128               trust
sudo service postgresql-8.4 restart
bin/dbinit | psql act
bin/dbinit | psql acttest
wiki-toolkit-setupdb --type postgres --name actwiki --user vagrant --pass vagrant
vim conf/act.ini
# [database]
# test_dsn    = dbi:Pg:dbname=acttest
# test_user   = vagrant
# test_passwd = vagrant
# [wiki]
# dbname = actwiki
# dbuser = vagrant
# dbpass = vagrant
# [email]
# sender_address = vagrant@localhost.localdomain
# [payment]
# notify_bcc  = vagrant+bcc@localhost.localdomain
cat >conf/local.ini <<'EOF'
[general]
default_language = en
languages = en
name_en = Perl Event Name
default_country = fr
full_uri = http://localhost:8080/
timezone = Europe/Paris

[talks]
durations = 20 40 120
start_date = 2014-08-06 18:00:00
end_date = 2014-08-07 18:00:00
submissions_open = 0
show_schedule = 0

[rooms]
rooms = roomA roomB
roomA_name_en = Room A
roomB_name_en = Room B

[database]
dump_file = act.dump
pg_dump = /usr/bin/pg_dump

[payment]
currency = EUR
type_fake_notify_bcc = vagrant+paymentbcc@localhost
products = registration

[product_registration]
prices = 1
name_en = Registration
[product_registration_price1]
amount = 25
EOF
make test

cat >>~/.bashrc <<'EOF'
export ACTHOME=$HOME/act
export PERL5LIB=$ACTHOME/lib
export PATH=/usr/local/apache/bin:$PATH
EOF

httpd -f $ACTHOME/httpd.conf

pkill httpd
git fetch origin
git merge --ff-only origin/master
perl Makefile.PL
make
bin/dbupdate main
bin/dbupdate test
make test
